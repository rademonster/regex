#!/usr/bin/env python
import sys, re, argparse, codecs
parser = argparse.ArgumentParser(description="""
	regex reads lines from stdin and writes a line for every found GROUP to stdout.
	If groups are not specified in your regex ie (), no data will be returned.
	If you dont want to use groups you should use grep.
	""")
fmt = parser.add_mutually_exclusive_group()
parser.add_argument("expression", type=str, help="A regular expression surrounded by quotes and containing capture groups.")
fmt.add_argument("-r", "--row", action="store_true", help="Output Matched groups on a single line instead of one by one.")
fmt.add_argument("-f", "--format", type=str, help="A format string to print found groups.")
parser.add_argument("--fail", type=int, help="""If fail is 1 the program will exit with failiure after input stops.
	If fail is 2 program will exit with failure as soon as there is not a match.""")
args = parser.parse_args()
if not args.expression:
	sys.exit(1)
r=re.compile(args.expression)
failed = False
for line in sys.stdin:
	m = r.match(line)
	if not m:
		failed = True
		if args.fail == 2:
			break
		continue
	grps = m.groups()
	#Print all items on same line -r
	if args.row:
		for i in grps:
			print i,
		print
	#else print capture groups in formated string
	elif args.format:
		f = codecs.decode(args.format, 'unicode_escape')
		print f % grps,
	#else print one capture group per line
	else:
		for i in grps:
			print i

if failed and args.fail > 0:
	sys.exit(1)
else:
	sys.exit(0)